/*
 * Lcd.cpp
 *
 *  Created on: May 16, 2024
 *      Author: This PC
 */

#include "Lcd.h"

namespace blib
{

    Lcd::Lcd(LcdType type, I2C_HandleTypeDef mHi2c, uint8_t address)
    {

    }
    Lcd::~Lcd()
    {

    }
    void Lcd::sendCmd(uint8_t command)
    {
        uint8_t dataHigh = 0, dataLow = 0;
        uint8_t data[4];
        dataHigh = (cmd & 0xF0);
        dataLow = ((cmd << 4) & 0xF0);
        data[0] = dataHigh | 0x0C;    //en = 1, rw = 0, rs = 0;
        data[1] = dataHigh | 0x08;    //en = 0, rw = 0, rs = 0;
        data[2] = dataLow | 0x0C;
        data[3] = dataLow | 0x08;
        HAL_I2C_Master_Transmit(mHi2c, mLcdAddress, (uint8_t*) data, sizeof(data), 100);
    }
    void Lcd::sendData(uint8_t data)
    {
        uint8_t dataHigh = 0, dataLow = 0;
        uint8_t data[4];
        dataHigh = (dat & 0xF0);
        dataLow = ((dat << 4) & 0xF0);
        data[0] = dataHigh | 0x0D;    //en = 1, rw = 0, rs = 1;
        data[1] = dataHigh | 0x09;    //en = 0, rw = 0, rs = 1;
        data[2] = dataLow | 0x0D;
        data[3] = dataLow | 0x09;
        HAL_I2C_Master_Transmit(mHi2c, mLcdAddress, (uint8_t*) data, sizeof(data), 100);
    }
    void Lcd::setCursor(uint8_t row, uint8_t col)
    {

    }
    void Lcd::rollData()
    {

    }
    void Lcd::pushData()
    {

    }
    void Lcd::displayLine(uint8_t row, uint8_t col, const char *string)
    {

    }
    void Lcd::clearDisplay()
    {

    }
    void Lcd::init()
    {

    }
    void Lcd::makeCustomCharacter(uint8_t location, uint8_t *byte)
    {

    }

}    // namespace blib

